<?php

require_once 'db.php';


$response = array();
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

  if (($_POST['action'] === 'getLogs')) {
    $response = getLogs();
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'addUser')) {
    $response = addUser($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'getUsers')) {
    $response = getUsers();
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'editUser')) {
    $response = getSingleUser($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'deleteUser')) {
    $response = deleteUser($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'getPermission')) {
    $response = getPermission($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'getAllPermissions')) {
    $response = getAllPermissions();
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'getRoles')) {
    $response = getRoles();
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'updateUser')) {
    $response = updateUser($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'showAddUserModal')) {
    $response = showAddUserModal();
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'showEditRoleModal')) {
    $response = showEditRoleModal($_POST);
    echo json_encode($response);
    die();

  }


  if (($_POST['action'] === 'addRole')) {
    $response = addRole($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'editRole')) {
    $response = editRole($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'deleteRole')) {
    $response = deleteRole($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'showEditModal')) {
    $response = showEditModal($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'showAddModal')) {
    $response = showAddModal($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'editPermission')) {
    $response = editPermission($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'addPermission')) {
    $response = addPermission($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'deletePermission')) {
    $response = deletePermission($_POST);
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'getContacts')) {
    $response = getContacts();
    echo json_encode($response);
    die();

  }

  if (($_POST['action'] === 'showDeletedUsers')) {
    $response = showDeletedUsers();
    echo json_encode($response);
    die();

  }


}




function getRoles()
{
  global $db;
  global $con;

  $response = $db->fetch($con, 'roles');
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Roles fond successfully. ');
  } else {
    return array('status' => false, 'message' => 'Roles not fond. ');
  }

}
function addRole($data)
{
  global $db;
  global $con;
  $response = $db->create($con, 'roles', array('role' => $data['role'], 'user_id' => $_SESSION['uid']));
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Role added successfully. ');
  } else {
    return array('status' => false, 'message' => 'Role not added. ');
  }

}

function showEditRoleModal($data)
{
  global $db;
  global $con;
  $response = $db->fetch($con, 'roles', array('id' => $data['id']));
  if (!empty($response)) {
    return array('status' => true, 'data' => $response[0], 'message' => 'Role updated successfully. ');
  } else {
    return array('status' => false, 'message' => 'Role not updated. ');
  }

}

function editRole($data)
{
  global $db;
  global $con;
  $response = $db->update($con, 'roles', array('role' => $data['role']), array('id' => $data['id']));
  if (!empty($response)) {
    return array('status' => true, 'message' => 'Role updated successfully. ');
  } else {
    return array('status' => false, 'message' => 'Role not updated. ');
  }

}

function deleteRole($data)
{
  global $db;
  global $con;
  $response = $db->delete($con, 'roles', array('id' => $data['id']));
  if (!empty($response)) {
    return array('status' => true, 'message' => 'Role Deleted successfully. ');
  } else {
    return array('status' => false, 'message' => 'Role not Deleted. ');
  }

}
function getAllPermissions()
{
  global $db;
  global $con;

  $response = $db->fetch($con, 'permissions', array('isDeleted' => 0));
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Permissions fond successfully. ');
  } else {
    return array('status' => false, 'message' => 'Permissions not fond. ');
  }

}

function showEditModal($data)
{
  global $db;
  global $con;
  $roles = $db->fetch($con, 'roles', array('isDeleted' => 0));
  $permissions = $db->fetch($con, 'permissions', array('id' => $data['id']));
  $response['permissions'] = $permissions;
  $response['roles'] = $roles;
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Role found successfully. ');
  } else {
    return array('status' => false, 'message' => 'Role not found. ');
  }

}
function showAddModal($data)
{
  global $db;
  global $con;
  $roles = $db->fetch($con, 'roles', array('isDeleted' => 0));
  $response['roles'] = $roles;
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'data found successfully. ');
  } else {
    return array('status' => false, 'message' => 'data not found. ');
  }

}

function editPermission($data)
{
  global $db;
  global $con;
  $upArr = array('role_id' => $data['role_id'], 'permissions' => $data['permissions']);
  $where = array('id' => $data['prmsn_id'], 'isDeleted' => 0);
  $response = $db->update($con, 'permissions', $upArr, $where);
  if (!empty($response)) {
    return array('status' => true, 'message' => 'Permission Updated successfully. ');
  } else {
    return array('status' => false, 'message' => 'Permission not updated. ');
  }

}

function addPermission($data)
{
  global $db;
  global $con;
  $upArr = array('role_id' => $data['role_id'], 'permissions' => $data['permissions']);

  $response = $db->create($con, 'permissions', $upArr);
  if (!empty($response)) {
    return array('status' => true, 'message' => 'Permission added successfully. ');
  } else {
    return array('status' => false, 'message' => 'Permission not added. ');
  }

}

function deletePermission($data)
{
  global $db;
  global $con;
  $where = array('id' => $data['id']);
  $response = $db->delete($con, 'permissions', $where);
  if (!empty($response)) {
    return array('status' => true, 'message' => 'Permission deleted successfully. ');
  } else {
    return array('status' => false, 'message' => 'Permission not deleted. ');
  }

}



function getContacts()
{
  global $db;
  global $con;

  $response = $db->fetch($con, 'contact_us');
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Contact fond successfully. ');
  } else {
    return array('status' => false, 'message' => 'Contact not fond. ');
  }

}

function getLogs()
{
  global $db;
  global $con;

  $response = $db->fetch($con, 'login_logs');
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Logs fond successfully. ');
  } else {
    return array('status' => false, 'message' => 'Logs not fond. ');
  }

}

function getUsers()
{
  global $db;
  global $con;

  $response = $db->fetch($con, 'users',array('isDeleted'=>0));
  //print_r($response);

  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Users fetched successfully. ');
  } else {
    return array('status' => false, 'message' => 'Users not fond. ');
  }

}

function showDeletedUsers()
{
  global $db;
  global $con;

  $response = $db->fetch($con, 'users',array('isDeleted'=>1));
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Users fetched successfully. ');
  } else {
    return array('status' => false, 'message' => 'Users not fond. ');
  }

}

function getSingleUser($data)
{
  global $db;
  global $con;
  $roles = $db->fetch($con, 'roles');
  $response = $db->fetch($con, 'users', array('id' => $data['id']));
  $permissions = $db->fetch($con, 'permissions', array('role_id' => $response[0]['roles']));
  $response['roles'] = $roles;
  $response['permissions'] = $permissions;
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Users fetched successfully. ');
  } else {
    return array('status' => false, 'message' => 'Users not fond. ');
  }

}
function showAddUserModal()
{
  global $db;
  global $con;
  $roles = $db->fetch($con, 'roles');
  if (!empty($roles)) {
    return array('status' => true, 'data' => $roles, 'message' => 'Data fetched successfully. ');
  } else {
    return array('status' => false, 'message' => 'Data not fond. ');
  }

}
function getPermission($data)
{
  global $db;
  global $con;
  $response = $db->fetch($con, 'permissions', array('role_id' => $data['role_id']));
  if (!empty($response)) {
    return array('status' => true, 'data' => $response, 'message' => 'Data fetched successfully. ');
  } else {
    return array('status' => false, 'message' => 'Data not fond. ');
  }

}



function addUser($data)
{
  global $db;
  global $con;

  $data['password'] = password_hash($data['password'], PASSWORD_DEFAULT);
  $check = $db->exist($con, $data['email'], 'users');
  if (!$check) {

    $insertArr = array(
      'name' => $data['name'],
      'email' => $data['email'],
      'phone' => $data['phone'],
      'password' => $data['password'],
      'roles' => $data['roles'],
      'permissions' => json_encode($data['permissions']),
      'is_verified' => 1
    );

    $result = $db->create($con, 'users', $insertArr);
    if ($result) {
      return array('status' => true, 'uid' => $result, 'message' => 'User added successfully. ');
    } else {
      return array('status' => false, 'message' => 'User not added.');
    }
  } else {
    return array('status' => false, 'message' => 'User already exist.');
  }
}


function updateUser($data)
{
  global $db, $con;

  if (!empty($data) && isset($data['id'])) {
    $id = $data['id'];
    $update = array();
    $user = $db->fetch($con, 'users', array('id' => $data['id']));
    if ($user[0]['is_verified'] !== 1) {
      if (isset($data['is_verified']) && $data['is_verified'] == 'on') {
        $update['is_verified'] = 1;
      } else {
        $update['is_verified'] = 0;
      }
    }


    if (isset($data['isDeleted']) && $data['isDeleted'] == 'on') {
      $update['isDeleted'] = 1;
    } else {
      $update['isDeleted'] = 0;
    }

    if (isset($data['permissions']) && is_array($data['permissions'])) {
      $update['permissions'] = json_encode($data['permissions']);
    }
    if (isset($data['name'])) {
      $update['name'] = $data['name'];
    }
    if (isset($data['email'])) {
      $update['email'] = $data['email'];
    }
    if (isset($data['phone'])) {
      $update['phone'] = $data['phone'];
    }
    if (isset($data['roles'])) {
      $update['roles'] = $data['roles'];
    }

    $update['updated_at'] = date("Y-m-d H:i:s");

    $result = $db->update($con, 'users', $update, array('id' => $id));

    if ($result) {
      return array('status' => true, 'message' => 'User updated successfully.');
    } else {
      return array('status' => false, 'message' => 'User not updated.');
    }
  } else {
    return array('status' => false, 'message' => 'Invalid data or user ID.');
  }
}

function deleteUser($data)
{
  global $db;
  global $con;
  $where['id'] = $data['id'];
  $result = $db->update($con, 'users', array('isDeleted' => 1), $where);
  if ($result) {
    return array('status' => true, 'message' => 'User deleted successfully. ');
  } else {
    return array('status' => false, 'message' => 'User not deleted.');
  }
}

function validateEmail($email)
{
  $regex = '/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/';
  if (preg_match($regex, $email)) {
    return true;
  } else {
    return false;
  }
}



function validatePhone($phone)
{
  $phone = preg_replace('/[\s\-\(\)]+/', '', $phone);
  if (preg_match('/^\d{10}$/', $phone)) {
    return true;
  } else {
    return false;
  }
}