$(document).ready(function() {

    $.ajax({
        type: 'POST',
        url: '../auth.php',
        data: { action: 'checkAuth' },
        success: function(response) {
            var res1 = JSON.parse(response);
            if (res1.status == false) {
                var  url1 = res1.base_url+'login.html';
              window.location.href = url1;
            }
        }
       });

    let currentPage = 1;
    const rowsPerPage = 10;
    let data = [];

    function renderTable(page) {
        const start = (page - 1) * rowsPerPage;
        const end = page * rowsPerPage;
        const paginatedData = data.slice(start, end);
        const $tableBody = $('#dataTable tbody');
        $tableBody.empty();

        $.each(paginatedData, function(index, item) {
            const $row = $('<tr>');
            $('<td>').text(item.id).appendTo($row);
            $('<td>').text(item.user_id).appendTo($row);
            $('<td>').text(item.browser).appendTo($row);
            $('<td>').text(item.platform).appendTo($row);
            $('<td>').text(item.ip).appendTo($row);
            $('<td>').text(item.last_login).appendTo($row);
            $tableBody.append($row);
        });

        renderPagination();
    }

    function renderPagination() {
        const totalPages = Math.ceil(data.length / rowsPerPage);
        const $pagination = $('.pagination');
        $pagination.empty();

        for (let i = 1; i <= totalPages; i++) {
            const $button = $('<button>').text(i);
            if (i === currentPage) {
                $button.attr('disabled', true);
            }
            $button.on('click', function() {
                currentPage = i;
                renderTable(currentPage);
            });
            $pagination.append($button);
        }
    }

    function sortData(sortKey, sortOrder) {
        data.sort((a, b) => {
            if (a[sortKey] < b[sortKey]) return sortOrder === 'asc' ? -1 : 1;
            if (a[sortKey] > b[sortKey]) return sortOrder === 'asc' ? 1 : -1;
            return 0;
        });
        renderTable(currentPage);
    }

    function filterData(query) {
        const filteredData = data.filter(item => {
            return Object.values(item).some(val =>
                String(val).toLowerCase().includes(query.toLowerCase())
            );
        });
        data = filteredData;
        renderTable(currentPage);
    }

    $('#dataTable th').on('click', function() {
        const sortKey = $(this).data('sort');
        const sortOrder = $(this).data('sort-order') === 'asc' ? 'desc' : 'asc';
        $(this).data('sort-order', sortOrder);
        sortData(sortKey, sortOrder);
    });

    $('#filterInput').on('input', function() {
        const query = $(this).val();
        loadData(query);
    });

    function loadData(query = '') {
        $.ajax({
            type: 'POST',
            url: '../user.php',
            data: { action: 'getLogs' },
            success: function(response) {
                try {
                    var parsedResponse = JSON.parse(response);
                    console.log("Data received from server:", parsedResponse);

                    if (parsedResponse.status === true && Array.isArray(parsedResponse.data)) {
                        data = parsedResponse.data;
                        if (query) {
                            filterData(query);
                        } else {
                            renderTable(currentPage);
                        }
                    } else {
                        console.error('Invalid data format received:', parsedResponse);
                    }
                } catch (error) {
                    console.error('Error parsing JSON response:', error);
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error('There was a problem with the AJAX request:', textStatus, errorThrown);
            }
        });
    }

    loadData();
});